{"ast":null,"code":"var _jsxFileName = \"/Users/sandeepvarala/IdeaProjects/expense-cal-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport groups from './data/groups.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State to hold the groups\n  let initialGroups;\n  const [groups, setGroups] = useState(initialGroups.Groups);\n\n  // State to hold the input values for the new group form\n  const [newGroupName, setNewGroupName] = useState('');\n\n  // Function to handle form submission for adding a new group\n  const handleAddGroup = event => {\n    event.preventDefault();\n    const newGroup = {\n      id: groups.length + 1,\n      // Generate a new ID for the group\n      name: newGroupName,\n      person: [] // Initialize persons array for the new group\n    };\n    setGroups([...groups, newGroup]);\n    setNewGroupName(''); // Clear the input field after adding the group\n  };\n\n  // Event handler for input change in the new group form\n  const handleNewGroupNameChange = event => {\n    setNewGroupName(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newGroupName\",\n        children: \"New Group Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newGroupName\",\n        value: newGroupName,\n        onChange: handleNewGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Groups:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: group.name\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"ugLiHtXX8+LzUC31AbuA0d048l8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","groups","jsxDEV","_jsxDEV","App","_s","initialGroups","setGroups","Groups","newGroupName","setNewGroupName","handleAddGroup","event","preventDefault","newGroup","id","length","name","person","handleNewGroupNameChange","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","map","group","_c","$RefreshReg$"],"sources":["/Users/sandeepvarala/IdeaProjects/expense-cal-ui/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport groups from './data/groups.json';\n\nconst App = () => {\n    // State to hold the groups\n    let initialGroups;\n    const [groups, setGroups] = useState(initialGroups.Groups);\n\n    // State to hold the input values for the new group form\n    const [newGroupName, setNewGroupName] = useState('');\n\n    // Function to handle form submission for adding a new group\n    const handleAddGroup = (event) => {\n        event.preventDefault();\n        const newGroup = {\n            id: groups.length + 1, // Generate a new ID for the group\n            name: newGroupName,\n            person: [] // Initialize persons array for the new group\n        };\n        setGroups([...groups, newGroup]);\n        setNewGroupName(''); // Clear the input field after adding the group\n    };\n\n    // Event handler for input change in the new group form\n    const handleNewGroupNameChange = (event) => {\n        setNewGroupName(event.target.value);\n    };\n\n    return (\n        <div>\n            <h1>Group Form</h1>\n            <form onSubmit={handleAddGroup}>\n                <label htmlFor=\"newGroupName\">New Group Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"newGroupName\"\n                    value={newGroupName}\n                    onChange={handleNewGroupNameChange}\n                />\n                <button type=\"submit\">Add Group</button>\n            </form>\n\n            <h2>Groups:</h2>\n            <ul>\n                {groups.map(group => (\n                    <li key={group.id}>{group.name}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA,IAAIC,aAAa;EACjB,MAAM,CAACL,MAAM,EAAEM,SAAS,CAAC,GAAGP,QAAQ,CAACM,aAAa,CAACE,MAAM,CAAC;;EAE1D;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMW,cAAc,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG;MACbC,EAAE,EAAEd,MAAM,CAACe,MAAM,GAAG,CAAC;MAAE;MACvBC,IAAI,EAAER,YAAY;MAClBS,MAAM,EAAE,EAAE,CAAC;IACf,CAAC;IACDX,SAAS,CAAC,CAAC,GAAGN,MAAM,EAAEa,QAAQ,CAAC,CAAC;IAChCJ,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMS,wBAAwB,GAAIP,KAAK,IAAK;IACxCF,eAAe,CAACE,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,oBACIlB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBvB,OAAA;MAAMwB,QAAQ,EAAEhB,cAAe;MAAAW,QAAA,gBAC3BnB,OAAA;QAAOyB,OAAO,EAAC,cAAc;QAAAN,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrDvB,OAAA;QACI0B,IAAI,EAAC,MAAM;QACXd,EAAE,EAAC,cAAc;QACjBM,KAAK,EAAEZ,YAAa;QACpBqB,QAAQ,EAAEX;MAAyB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACFvB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAEPvB,OAAA;MAAAmB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBvB,OAAA;MAAAmB,QAAA,EACKrB,MAAM,CAAC8B,GAAG,CAACC,KAAK,iBACb7B,OAAA;QAAAmB,QAAA,EAAoBU,KAAK,CAACf;MAAI,GAArBe,KAAK,CAACjB,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACrB,EAAA,CA/CID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}