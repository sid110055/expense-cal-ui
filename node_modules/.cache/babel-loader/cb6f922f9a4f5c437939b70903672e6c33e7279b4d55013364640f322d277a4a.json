{"ast":null,"code":"var _jsxFileName = \"/Users/sandeepvarala/IdeaProjects/expense-cal-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Sample JSON data\n  const initialGroups = {\n    \"Groups\": [{\n      \"id\": 1,\n      \"name\": \"FL_trip\",\n      \"person\": []\n    }, {\n      \"id\": 2,\n      \"name\": \"AZ_trip\",\n      \"person\": []\n    }, {\n      \"id\": 3,\n      \"name\": \"New york trip\",\n      \"person\": []\n    }, {\n      \"id\": 4,\n      \"name\": \"New york trip\",\n      \"person\": []\n    }, {\n      \"id\": 5,\n      \"name\": \"Montly house expense\",\n      \"person\": []\n    }]\n  };\n\n  // State to hold the groups\n  const [groups, setGroups] = useState(initialGroups.Groups);\n\n  // State to hold the input values for the new group form\n  const [newGroupName, setNewGroupName] = useState('');\n\n  // State to hold the selected group\n  const [selectedGroup, setSelectedGroup] = useState('');\n\n  // Function to handle form submission for adding a new group\n  const handleAddGroup = event => {\n    event.preventDefault();\n    const newGroup = {\n      id: groups.length + 1,\n      // Generate a new ID for the group\n      name: newGroupName,\n      person: [] // Initialize persons array for the new group\n    };\n    setGroups([...groups, newGroup]);\n    setNewGroupName(''); // Clear the input field after adding the group\n  };\n\n  // Event handler for input change in the new group form\n  const handleNewGroupNameChange = event => {\n    setNewGroupName(event.target.value);\n  };\n\n  // Event handler for selecting a group from the dropdown list\n  const handleGroupChange = event => {\n    setSelectedGroup(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newGroupName\",\n        children: \"New Group Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newGroupName\",\n        value: newGroupName,\n        onChange: handleNewGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Group:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"groups\",\n      value: selectedGroup,\n      onChange: handleGroupChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: group.id,\n        children: group.name\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selected Group:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedGroup ? `Selected Group ID: ${selectedGroup}` : 'No group selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"QaE2PYK69MJQLZGH3BQX1HrqvA0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","initialGroups","groups","setGroups","Groups","newGroupName","setNewGroupName","selectedGroup","setSelectedGroup","handleAddGroup","event","preventDefault","newGroup","id","length","name","person","handleNewGroupNameChange","target","value","handleGroupChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","map","group","_c","$RefreshReg$"],"sources":["/Users/sandeepvarala/IdeaProjects/expense-cal-ui/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n    // Sample JSON data\n    const initialGroups = {\n        \"Groups\": [\n            { \"id\": 1, \"name\": \"FL_trip\", \"person\": [] },\n            { \"id\": 2, \"name\": \"AZ_trip\", \"person\": [] },\n            { \"id\": 3, \"name\": \"New york trip\", \"person\": [] },\n            { \"id\": 4, \"name\": \"New york trip\", \"person\": [] },\n            { \"id\": 5, \"name\": \"Montly house expense\", \"person\": [] }\n        ]\n    };\n\n    // State to hold the groups\n    const [groups, setGroups] = useState(initialGroups.Groups);\n\n    // State to hold the input values for the new group form\n    const [newGroupName, setNewGroupName] = useState('');\n\n    // State to hold the selected group\n    const [selectedGroup, setSelectedGroup] = useState('');\n\n    // Function to handle form submission for adding a new group\n    const handleAddGroup = (event) => {\n        event.preventDefault();\n        const newGroup = {\n            id: groups.length + 1, // Generate a new ID for the group\n            name: newGroupName,\n            person: [] // Initialize persons array for the new group\n        };\n        setGroups([...groups, newGroup]);\n        setNewGroupName(''); // Clear the input field after adding the group\n    };\n\n    // Event handler for input change in the new group form\n    const handleNewGroupNameChange = (event) => {\n        setNewGroupName(event.target.value);\n    };\n\n    // Event handler for selecting a group from the dropdown list\n    const handleGroupChange = (event) => {\n        setSelectedGroup(event.target.value);\n    };\n\n    return (\n        <div>\n            <h1>Group Form</h1>\n            <form onSubmit={handleAddGroup}>\n                <label htmlFor=\"newGroupName\">New Group Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"newGroupName\"\n                    value={newGroupName}\n                    onChange={handleNewGroupNameChange}\n                />\n                <button type=\"submit\">Add Group</button>\n            </form>\n\n            <h2>Select a Group:</h2>\n            <select id=\"groups\" value={selectedGroup} onChange={handleGroupChange}>\n                <option value=\"\">Select...</option>\n                {groups.map(group => (\n                    <option key={group.id} value={group.id}>{group.name}</option>\n                ))}\n            </select>\n\n            <h2>Selected Group:</h2>\n            <p>{selectedGroup ? `Selected Group ID: ${selectedGroup}` : 'No group selected'}</p>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}