{"ast":null,"code":"var _jsxFileName = \"/Users/sandeepvarala/IdeaProjects/expense-cal-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button, Select, MenuItem } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State to hold the groups\n  const [groups, setGroups] = useState([]);\n\n  // State to hold the selected group\n  const [selectedGroup, setSelectedGroup] = useState('');\n\n  // State to hold the input value for new group name\n  const [newGroupName, setNewGroupName] = useState('');\n\n  // Fetch data from groups.json when the component mounts\n  useEffect(() => {\n    fetch('/data/groups.json').then(response => response.json()).then(data => setGroups(data.Groups)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Function to handle form submission for adding a new group\n  const handleAddGroup = event => {\n    event.preventDefault();\n    const newGroup = {\n      id: groups.length + 1,\n      // Generate a new ID for the group\n      name: newGroupName,\n      person: [] // Initialize persons array for the new group\n    };\n    setGroups([...groups, newGroup]);\n    setNewGroupName(''); // Clear the input field after adding the group\n  };\n\n  // Event handler for selecting a group from the dropdown list\n  const handleGroupChange = event => {\n    setSelectedGroup(event.target.value);\n  };\n\n  // Event handler for input change in the new group form\n  const handleNewGroupNameChange = event => {\n    setNewGroupName(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"m\",\n    style: {\n      marginTop: '50px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      children: \"Group Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddGroup,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Add New Group Name\",\n        fullWidth: true,\n        value: newGroupName,\n        onChange: handleNewGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Add Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      style: {\n        marginBottom: '50px'\n      },\n      children: \"Select a Group:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedGroup,\n      onChange: handleGroupChange,\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"\",\n        children: \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), groups.map(group => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: group.id,\n        children: group.name\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      style: {\n        marginBottom: '110px'\n      },\n      children: \"Selected Group:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      style: {\n        marginBottom: '100px'\n      },\n      children: selectedGroup ? `Selected Group ID: ${selectedGroup}` : 'No group selected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"bIwAu7jqN3AbvZ6UbVSyNUWU53Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Button","Select","MenuItem","jsxDEV","_jsxDEV","App","_s","groups","setGroups","selectedGroup","setSelectedGroup","newGroupName","setNewGroupName","fetch","then","response","json","data","Groups","catch","error","console","handleAddGroup","event","preventDefault","newGroup","id","length","name","person","handleGroupChange","target","value","handleNewGroupNameChange","maxWidth","style","marginTop","textAlign","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","fullWidth","onChange","color","type","marginBottom","map","group","_c","$RefreshReg$"],"sources":["/Users/sandeepvarala/IdeaProjects/expense-cal-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button, Select, MenuItem } from '@mui/material';\n\nconst App = () => {\n    // State to hold the groups\n    const [groups, setGroups] = useState([]);\n\n    // State to hold the selected group\n    const [selectedGroup, setSelectedGroup] = useState('');\n\n    // State to hold the input value for new group name\n    const [newGroupName, setNewGroupName] = useState('');\n\n    // Fetch data from groups.json when the component mounts\n    useEffect(() => {\n        fetch('/data/groups.json')\n            .then(response => response.json())\n            .then(data => setGroups(data.Groups))\n            .catch(error => console.error('Error fetching data:', error));\n    }, []);\n\n    // Function to handle form submission for adding a new group\n    const handleAddGroup = (event) => {\n        event.preventDefault();\n        const newGroup = {\n            id: groups.length + 1, // Generate a new ID for the group\n            name: newGroupName,\n            person: [] // Initialize persons array for the new group\n        };\n        setGroups([...groups, newGroup]);\n        setNewGroupName(''); // Clear the input field after adding the group\n    };\n\n    // Event handler for selecting a group from the dropdown list\n    const handleGroupChange = (event) => {\n        setSelectedGroup(event.target.value);\n    };\n\n    // Event handler for input change in the new group form\n    const handleNewGroupNameChange = (event) => {\n        setNewGroupName(event.target.value);\n    };\n\n    return (\n        <Container maxWidth=\"m\" style={{ marginTop: '50px', textAlign: 'center' }}>\n            <Typography variant=\"h3\" align=\"center\">Group Form</Typography>\n            <form onSubmit={handleAddGroup}>\n                <TextField\n                    label=\"Add New Group Name\"\n                    fullWidth\n                    value={newGroupName}\n                    onChange={handleNewGroupNameChange}\n                />\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Add Group</Button>\n            </form>\n\n\n            <Typography variant=\"h4\" align=\"center\" style={{ marginBottom: '50px' }}>Select a Group:</Typography>\n            <Select value={selectedGroup} onChange={handleGroupChange} fullWidth>\n                <MenuItem value=\"\">Select...</MenuItem>\n                {groups.map(group => (\n                    <MenuItem key={group.id} value={group.id}>{group.name}</MenuItem>\n                ))}\n            </Select>\n\n            <Typography variant=\"h4\" align=\"center\" style={{ marginBottom: '110px' }}>Selected Group:</Typography>\n            <Typography align=\"center\"style={{ marginBottom: '100px' }}>{selectedGroup ? `Selected Group ID: ${selectedGroup}` : 'No group selected'}</Typography>\n        </Container>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}